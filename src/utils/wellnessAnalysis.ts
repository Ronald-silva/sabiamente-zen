import { CheckInData, WellnessReport, Challenge } from '@/types/wellness';

const motivationalQuotes = [
  "'A gente n√£o vive para se ver, vive para se avistar' ‚Äì Guimar√£es Rosa",
  "'Tudo vale a pena quando a alma n√£o √© pequena' ‚Äì Fernando Pessoa",
  "'√â preciso for√ßa para sonhar e perceber que a estrada vai al√©m do que se v√™' ‚Äì Los Hermanos",
  "'Viver √© desenhar sem borracha' ‚Äì Mill√¥r Fernandes",
  "'O correr da vida embrulha tudo. A vida √© assim: esquenta e esfria, aperta e da√≠ afrouxa, sossega e depois desinquieta' ‚Äì Guimar√£es Rosa",
  "'Tente mover o mundo - o primeiro passo ser√° mover a si mesmo' ‚Äì Plat√£o",
  "'Voc√™ n√£o pode mudar o vento, mas pode ajustar as velas do barco' ‚Äì Prov√©rbio popular",
];

export function analyzeWellness(data: CheckInData): WellnessReport {
  const energyScore = data.energy;
  const anxietyScore = data.anxiety;
  const sleepScore = data.sleep === '>7h' ? 5 : data.sleep === '5-7h' ? 3 : 1;
  const hydrationScore = data.hydration ? 5 : 2;
  const screenScore = data.screenTime === '<2h' ? 5 : data.screenTime === '2-4h' ? 3 : 1;

  const totalScore = (energyScore + (6 - anxietyScore) + sleepScore + hydrationScore + screenScore) / 5;

  let level: WellnessReport['level'];
  let message: string;
  let insight: string;

  if (totalScore >= 4) {
    level = 'excellent';
    message = 'Voc√™ est√° em equil√≠brio! ‚ú®';
    insight = 'Continue cuidando de si mesmo(a). Seu bem-estar est√° em dia e isso merece ser celebrado!';
  } else if (totalScore >= 3) {
    level = 'good';
    message = 'Voc√™ est√° no caminho certo üåü';
    insight = 'H√° alguns pontos para ajustar, mas voc√™ est√° bem no geral. Pequenos passos fazem grande diferen√ßa!';
  } else if (totalScore >= 2) {
    level = 'attention';
    message = 'Sinais de aten√ß√£o ‚ö†Ô∏è';
    insight = 'Seu corpo e mente est√£o pedindo mais cuidado. Que tal reservar um tempo para si hoje?';
  } else {
    level = 'stress';
    message = 'Momento de autocuidado urgente üíô';
    insight = 'Voc√™ parece sobrecarregado(a). Lembre-se: pedir ajuda √© sinal de coragem. Ligue 188 (CVV) se precisar conversar.';
  }

  // Add specific insights
  const specificInsights: string[] = [];
  
  if (data.sleep === '<5h') {
    specificInsights.push('Seu sono est√° curto. Tente relaxar √†s 21h para dormir melhor.');
  }
  
  if (!data.hydration) {
    specificInsights.push('Hidrata√ß√£o baixa pode afetar energia e concentra√ß√£o.');
  }
  
  if (data.screenTime === '>4h') {
    specificInsights.push('Muito tempo em telas pode aumentar cansa√ßo mental.');
  }
  
  if (data.anxiety >= 4) {
    specificInsights.push('Ansiedade alta detectada. Considere t√©cnicas de respira√ß√£o ou uma caminhada.');
  }

  if (specificInsights.length > 0) {
    insight += ' ' + specificInsights.join(' ');
  }

  const quote = motivationalQuotes[Math.floor(Math.random() * motivationalQuotes.length)];

  return { level, message, insight, quote };
}

export function generateChallenge(data: CheckInData): Challenge {
  const challenges = {
    sleep: [
      {
        title: 'Ritual do Sono üåô',
        description: 'Desligue todas as telas √†s 21h e leia uma p√°gina inspiradora antes de dormir.',
        category: 'sleep' as const,
      },
      {
        title: 'Prepara√ß√£o Zen üò¥',
        description: 'Prepare seu quarto: escure√ßa, silencie e ajuste a temperatura para 18-22¬∞C.',
        category: 'sleep' as const,
      },
    ],
    hydration: [
      {
        title: '√Ågua da Gratid√£o üíß',
        description: 'Beba um copo de √°gua com lim√£o e reflita sobre 3 coisas pelas quais √© grato(a).',
        category: 'hydration' as const,
      },
      {
        title: 'Ritual da Hidrata√ß√£o üçã',
        description: 'Coloque alarmes a cada 2h para beber √°gua. Adicione rodelas de lim√£o ou hortel√£.',
        category: 'hydration' as const,
      },
    ],
    screen: [
      {
        title: 'Detox Digital üì±',
        description: 'Reduza 15 minutos de celular e caminhe ao ar livre observando a natureza.',
        category: 'screen' as const,
      },
      {
        title: 'Pausa Consciente ‚è∏Ô∏è',
        description: 'A cada hora de tela, fa√ßa 5 minutos de pausa olhando para longe.',
        category: 'screen' as const,
      },
    ],
    food: [
      {
        title: 'Sabor Brasileiro ü•≠',
        description: 'Inclua uma fruta t√≠pica brasileira (manga, acerola, caju) na pr√≥xima refei√ß√£o.',
        category: 'food' as const,
      },
      {
        title: 'Refei√ß√£o Mindful üçΩÔ∏è',
        description: 'Fa√ßa uma refei√ß√£o sem celular, saboreando cada garfada com aten√ß√£o plena.',
        category: 'food' as const,
      },
    ],
    anxiety: [
      {
        title: 'Respira√ß√£o Bossa Nova üéµ',
        description: 'Fa√ßa 5 minutos de respira√ß√£o profunda ao som de bossa nova ou m√∫sica suave.',
        category: 'anxiety' as const,
      },
      {
        title: 'Caminhada da Calma üö∂',
        description: 'Caminhe 10 minutos em ritmo tranquilo, prestando aten√ß√£o nos sons ao redor.',
        category: 'anxiety' as const,
      },
    ],
  };

  // Determine which challenge to give based on check-in data
  let selectedCategory: keyof typeof challenges;
  
  if (data.sleep === '<5h') {
    selectedCategory = 'sleep';
  } else if (!data.hydration) {
    selectedCategory = 'hydration';
  } else if (data.screenTime === '>4h') {
    selectedCategory = 'screen';
  } else if (data.anxiety >= 4) {
    selectedCategory = 'anxiety';
  } else {
    selectedCategory = 'food';
  }

  const categoryChallenge = challenges[selectedCategory];
  const selected = categoryChallenge[Math.floor(Math.random() * categoryChallenge.length)];

  return {
    id: Date.now().toString(),
    ...selected,
    completed: false,
    date: new Date().toISOString(),
  };
}
